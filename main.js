/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/scss/style.scss?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scss/style.scss */ \"./src/scss/style.scss\");\n/* harmony import */ var _js_buttonsData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/buttonsData */ \"./src/js/buttonsData.js\");\n/* harmony import */ var _js_keyboard__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/keyboard */ \"./src/js/keyboard.js\");\n\n\n\n\nconst wrapper = document.createElement('div');\nwrapper.className = 'wrapper';\n\nconst parent = document.createElement('div');\nparent.className = 'keyboard';\n\nconst textArea = document.createElement('textarea');\ntextArea.className = 'text-area';\ntextArea.setAttribute('autofocus', '');\n\nconst message = document.createElement('p');\nmessage.className = 'message';\nmessage.textContent = 'Keyboard was made with OS Windows. To change the language, use the shortcut Ctrl + Alt / Alt + Ctrl';\n\nwrapper.append(textArea, message, parent);\ndocument.body.append(wrapper);\n\nconst lang = JSON.parse(localStorage.getItem('language'));\n\nconst keyboard = new _js_keyboard__WEBPACK_IMPORTED_MODULE_2__.Keyboard(lang, _js_buttonsData__WEBPACK_IMPORTED_MODULE_1__.buttonsData, parent);\nkeyboard.buildButtonList();\n\nfunction insertChar(char) {\n  textArea.setRangeText(char, textArea.selectionStart, textArea.selectionEnd, 'end');\n}\n\nfunction buttonAction(code, isClick) {\n  if (isClick) {\n    const char = keyboard.getButtonValue(code);\n    if (char) {\n      insertChar(char);\n    }\n  } else {\n    const char = keyboard.getButton(code);\n    if (char) {\n      char.setInActiveState();\n    }\n  }\n}\n\nfunction deleteText(stepForward = 0, stepBack = 0) {\n  if (textArea.value.length > 0) {\n    if (textArea.selectionStart !== textArea.selectionEnd) {\n      textArea.setRangeText('', textArea.selectionStart, textArea.selectionEnd, 'end');\n    } else {\n      textArea.setRangeText('', textArea.selectionStart - stepForward, textArea.selectionEnd + stepBack, 'end');\n    }\n  }\n}\n\nfunction inputSimilarCases(code) {\n  if (code === 'CapsLock') {\n    keyboard.setCaps(code);\n    return;\n  }\n  if (code === 'ArrowLeft') {\n    const step = textArea.selectionStart - 1;\n    if (step >= 0) {\n      [textArea.selectionStart, textArea.selectionEnd] = [step, step];\n    }\n    return;\n  }\n  if (code === 'ArrowRight') {\n    const step = textArea.selectionStart + 1;\n    [textArea.selectionStart, textArea.selectionEnd] = [step, step];\n    return;\n  }\n  if (code === 'ArrowUp') {\n    const index = textArea.value.lastIndexOf('\\n', textArea.selectionStart - 1);\n    if (index >= 0) {\n      [textArea.selectionStart, textArea.selectionEnd] = [index, index];\n    }\n    return;\n  }\n  if (code === 'ArrowDown') {\n    const index = textArea.value.indexOf('\\n', textArea.selectionStart + 1);\n    if (index) {\n      [textArea.selectionStart, textArea.selectionEnd] = [index, index];\n    }\n    return;\n  }\n  if (code === 'Backspace') {\n    deleteText(1, 0);\n    return;\n  }\n  if (code === 'Delete') {\n    deleteText(0, 1);\n    return;\n  }\n  if (code === 'Enter') {\n    insertChar('\\n');\n    return;\n  }\n  if (code === 'Tab') {\n    insertChar('\\t');\n  }\n}\n\nfunction mouseClick(e) {\n  const code = e.target.getAttribute('data-code');\n  if (code === 'ShiftLeft' || code === 'ShiftRight') {\n    keyboard.setMouseShiftState(e.target);\n    return;\n  }\n  if (code === 'ControlLeft' || code === 'ControlRight') {\n    keyboard.addMouseShortcut('ctrl', code);\n    return;\n  }\n  if (code === 'AltLeft' || code === 'AltRight') {\n    keyboard.addMouseShortcut('alt', code);\n    return;\n  }\n  keyboard.clearShortcut();\n  inputSimilarCases(code);\n  if (code === 'CapsLock') {\n    return;\n  }\n  buttonAction(code, true);\n  e.target.addEventListener('mouseup', ()=> {\n    setTimeout(()=> {\n      buttonAction(code, false);\n    }, 100);\n  });\n  e.target.addEventListener('mouseleave', ()=> {\n    buttonAction(code, false);\n    e.target.mouseup = null;\n    e.target.mouseleave = null;\n  });\n}\n\nfunction keyboardClick(e) {\n  const code = e.code;\n  if (code === 'F12') {\n    return;\n  }\n  if (code === 'ShiftLeft' || code === 'ShiftRight') {\n    keyboard.setKeyboardShiftState(keyboard.getButton(code).node);\n    return;\n  }\n  e.preventDefault();\n  if (code === 'ControlLeft' || code === 'ControlRight') {\n    keyboard.addKeyboardShortcut('ctrl', code);\n    return;\n  }\n  if (code === 'AltLeft' || code === 'AltRight') {\n    keyboard.addKeyboardShortcut('alt', code);\n    return;\n  }\n  if (code === 'CapsLock') {\n    keyboard.setCaps(code);\n    return;\n  }\n  inputSimilarCases(code);\n  buttonAction(code, true);\n}\n\nparent.addEventListener('mousedown', mouseClick);\ndocument.addEventListener('keydown', keyboardClick);\n\ndocument.addEventListener('keyup', (e)=> {\n  const code = e.code;\n  if (code === 'ShiftLeft' || code === 'ShiftRight') {\n    keyboard.removeKeyboardShiftState(keyboard.getButton(code).node);\n    return;\n  }\n  if (code === 'ControlLeft' || code === 'ControlRight' || code === 'AltLeft' || code === 'AltRight') {\n    keyboard.clearShortcut();\n    return;\n  }\n  if (code === 'CapsLock') {\n    return;\n  }\n  buttonAction(e.code, false);\n});\n\ntextArea.addEventListener('focusout', () => textArea.focus());\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/index.js?");

/***/ }),

/***/ "./src/js/button.js":
/*!**************************!*\
  !*** ./src/js/button.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Button\": () => (/* binding */ Button)\n/* harmony export */ });\nclass Button {\n  constructor({\n    isSymbol, code, key, shift\n  }, language) {\n    this.isSymbol = isSymbol;\n    this.nodeValue = null;\n    this.node = null;\n    this.code = code;\n    this.ru = key.ru;\n    this.eng = key.eng;\n    this.shiftRu = shift.ru;\n    this.shiftEng = shift.eng;\n    this.lang = language;\n  }\n\n  buildNode() {\n    const node = document.createElement('button');\n    node.className = `button ${this.code.toLowerCase()}`;\n    this.node = node;\n    node.setAttribute('data-code', this.code);\n    this.updateButton(this.lang, false);\n    return this.node;\n  }\n\n  setLanguage() {\n    return this.language ? this.ru : this.eng;\n  }\n\n  updateButton(lang, isShift) {\n    if (!lang) {\n      if (isShift) {\n        this.nodeValue = this.shiftEng ? this.shiftEng : this.eng.toUpperCase();\n      } else {\n        this.nodeValue = this.eng;\n      }\n    }\n    if (lang) {\n      if (isShift) {\n        this.nodeValue = this.shiftRu ? this.shiftRu : this.ru.toUpperCase();\n      } else {\n        this.nodeValue = this.ru;\n      }\n    }\n    this.node.innerHTML = this.nodeValue;\n  }\n\n  setActiveState() {\n    this.node.classList.add('clicked');\n  }\n\n  setInActiveState() {\n    this.node.classList.remove('clicked');\n  }\n}\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/js/button.js?");

/***/ }),

/***/ "./src/js/buttonsData.js":
/*!*******************************!*\
  !*** ./src/js/buttonsData.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buttonsData\": () => (/* binding */ buttonsData)\n/* harmony export */ });\nconst buttonsData = [\n  {\n    isSymbol: true,\n    code: 'Backquote',\n    key: {\n      eng: '`',\n      ru: 'ё'\n    },\n    shift: {\n      eng: '~',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit1',\n    key: {\n      eng: '1',\n      ru: '1'\n    },\n    shift: {\n      eng: '!',\n      ru: '!'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit2',\n    key: {\n      eng: '2',\n      ru: '2'\n    },\n    shift: {\n      eng: '@',\n      ru: '\"'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit3',\n    key: {\n      eng: '3',\n      ru: '3'\n    },\n    shift: {\n      eng: '#',\n      ru: '№'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit4',\n    key: {\n      eng: '4',\n      ru: '4'\n    },\n    shift: {\n      eng: '$',\n      ru: ';'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit5',\n    key: {\n      eng: '5',\n      ru: '5'\n    },\n    shift: {\n      eng: '%',\n      ru: '%'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit6',\n    key: {\n      eng: '6',\n      ru: '6'\n    },\n    shift: {\n      eng: '^',\n      ru: ':'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit7',\n    key: {\n      eng: '7',\n      ru: '7'\n    },\n    shift: {\n      eng: '&',\n      ru: '?'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit8',\n    key: {\n      eng: '8',\n      ru: '8'\n    },\n    shift: {\n      eng: '*',\n      ru: '*'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit9',\n    key: {\n      eng: '9',\n      ru: '9'\n    },\n    shift: {\n      eng: '(',\n      ru: '('\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Digit0',\n    key: {\n      eng: '0',\n      ru: '0'\n    },\n    shift: {\n      eng: ')',\n      ru: ')'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Minus',\n    key: {\n      eng: '-',\n      ru: '-'\n    },\n    shift: {\n      eng: '_',\n      ru: '_'\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Equal',\n    key: {\n      eng: '=',\n      ru: '='\n    },\n    shift: {\n      eng: '+',\n      ru: '+'\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'Backspace',\n    key: {\n      eng: 'BACKSPACE',\n      ru: 'BACKSPACE'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'Tab',\n    key: {\n      eng: 'TAB',\n      ru: 'TAB'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyQ',\n    key: {\n      eng: 'q',\n      ru: 'й'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyW',\n    key: {\n      eng: 'w',\n      ru: 'ц'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyE',\n    key: {\n      eng: 'e',\n      ru: 'у'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyR',\n    key: {\n      eng: 'r',\n      ru: 'к'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyT',\n    key: {\n      eng: 't',\n      ru: 'е'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyY',\n    key: {\n      eng: 'y',\n      ru: 'н'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyU',\n    key: {\n      eng: 'u',\n      ru: 'г'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyI',\n    key: {\n      eng: 'i',\n      ru: 'ш'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyO',\n    key: {\n      eng: 'o',\n      ru: 'щ'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyP',\n    key: {\n      eng: 'p',\n      ru: 'з'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'BracketLeft',\n    key: {\n      eng: '[',\n      ru: 'х'\n    },\n    shift: {\n      eng: '{',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'BracketRight',\n    key: {\n      eng: ']',\n      ru: 'ъ'\n    },\n    shift: {\n      eng: '}',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Backslash',\n    key: {\n      eng: '\\\\',\n      ru: '\\\\'\n    },\n    shift: {\n      eng: '|',\n      ru: '/'\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'Delete',\n    key: {\n      eng: 'DEL',\n      ru: 'DEL'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'CapsLock',\n    key: {\n      eng: 'CAPS LOCK',\n      ru: 'CAPS LOCK'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyA',\n    key: {\n      eng: 'a',\n      ru: 'ф'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyS',\n    key: {\n      eng: 's',\n      ru: 'ы'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyD',\n    key: {\n      eng: 'd',\n      ru: 'в'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyF',\n    key: {\n      eng: 'f',\n      ru: 'а'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyG',\n    key: {\n      eng: 'g',\n      ru: 'п'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyH',\n    key: {\n      eng: 'h',\n      ru: 'р'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyJ',\n    key: {\n      eng: 'j',\n      ru: 'о'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyK',\n    key: {\n      eng: 'k',\n      ru: 'л'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyL',\n    key: {\n      eng: 'l',\n      ru: 'д'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Semicolon',\n    key: {\n      eng: ';',\n      ru: 'ж'\n    },\n    shift: {\n      eng: ':',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Quote',\n    key: {\n      eng: '\\'',\n      ru: 'э'\n    },\n    shift: {\n      eng: '\"',\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'Enter',\n    key: {\n      eng: 'ENTER',\n      ru: 'ENTER'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ShiftLeft',\n    key: {\n      eng: 'SHIFT',\n      ru: 'SHIFT'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyZ',\n    key: {\n      eng: 'z',\n      ru: 'я'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyX',\n    key: {\n      eng: 'x',\n      ru: 'ч'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyC',\n    key: {\n      eng: 'c',\n      ru: 'с'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyV',\n    key: {\n      eng: 'v',\n      ru: 'м'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyB',\n    key: {\n      eng: 'b',\n      ru: 'и'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyN',\n    key: {\n      eng: 'n',\n      ru: 'т'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'KeyM',\n    key: {\n      eng: 'm',\n      ru: 'ь'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Comma',\n    key: {\n      eng: ',',\n      ru: 'б'\n    },\n    shift: {\n      eng: '<',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Period',\n    key: {\n      eng: '.',\n      ru: 'ю'\n    },\n    shift: {\n      eng: '>',\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Slash',\n    key: {\n      eng: '/',\n      ru: '.'\n    },\n    shift: {\n      eng: '?',\n      ru: ','\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ArrowUp',\n    key: {\n      eng: '&#9650',\n      ru: '&#9650'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ShiftRight',\n    key: {\n      eng: 'SHIFT',\n      ru: 'SHIFT'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ControlLeft',\n    key: {\n      eng: 'CTRL',\n      ru: 'CTRL'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'AltLeft',\n    key: {\n      eng: 'ALT',\n      ru: 'ALT'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: true,\n    code: 'Space',\n    key: {\n      eng: ' ',\n      ru: ' '\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'AltRight',\n    key: {\n      eng: 'ALT',\n      ru: 'ALT'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ControlRight',\n    key: {\n      eng: 'CTRL',\n      ru: 'CTRL'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ArrowLeft',\n    key: {\n      eng: '&#9668',\n      ru: '&#9668'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ArrowDown',\n    key: {\n      eng: '&#9660',\n      ru: '&#9660'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  },\n  {\n    isSymbol: false,\n    code: 'ArrowRight',\n    key: {\n      eng: '&#9658',\n      ru: '&#9658'\n    },\n    shift: {\n      eng: null,\n      ru: null\n    }\n  }\n  // {\n  //   type: 'meta',\n  //   code: 'Fn',\n  //   key: {\n  //     eng: 'FN',\n  //     ru: 'FN'\n  //   },\n  //   shift: {\n  //     eng: null,\n  //     ru: null\n  //   }\n  // }\n\n];\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/js/buttonsData.js?");

/***/ }),

/***/ "./src/js/keyboard.js":
/*!****************************!*\
  !*** ./src/js/keyboard.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Keyboard\": () => (/* binding */ Keyboard)\n/* harmony export */ });\n/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button */ \"./src/js/button.js\");\n\n\nclass Keyboard {\n  buttonsList = new Map();\n\n  constructor(language, buttons, parentNode) {\n    this.language = language;\n    this.buttons = buttons;\n    this.parentNode = parentNode;\n    this.isUppercase = false;\n    this.isCaps = false;\n    this.isShift = false;\n    this.isCtrl = false;\n    this.isAlt = false;\n    this.shortcut = new Map();\n  }\n\n  buildButtonList() {\n    this.buttons.forEach(element => {\n      const node = new _button__WEBPACK_IMPORTED_MODULE_0__.Button(element, this.language);\n      this.buttonsList.set(element.code, node);\n      this.parentNode.append(node.buildNode());\n    });\n    const temp = document.createElement('div');\n    temp.className = 'button';\n    this.parentNode.append(temp);\n  }\n\n  changeLanguage() {\n    this.language = !this.language;\n    localStorage.setItem('language', this.language);\n    this.updateButtons();\n  }\n\n  switchUppercaseState() {\n    this.isUppercase = !this.isUppercase;\n    this.updateButtons();\n  }\n\n  setMouseShiftState(node) {\n    this.isShift = !this.isShift;\n    node.classList.toggle('clicked');\n    this.switchUppercaseState();\n  }\n\n  setKeyboardShiftState(node) {\n    this.isShift = true;\n    node.classList.add('clicked');\n    if (this.isCaps) {\n      this.isUppercase = false;\n    } else {\n      this.isUppercase = true;\n    }\n    this.updateButtons();\n  }\n\n  removeKeyboardShiftState(node) {\n    this.isShift = false;\n    node.classList.remove('clicked');\n    if (this.isCaps) {\n      this.isUppercase = true;\n    } else {\n      this.isUppercase = false;\n    }\n    this.updateButtons();\n  }\n\n  setCaps(code) {\n    this.isCaps = !this.isCaps;\n    this.getButton(code).node.classList.toggle('clicked');\n    this.isUppercase = !this.isUppercase;\n    this.updateButtons();\n  }\n\n  updateButtons() {\n    this.buttonsList.forEach((value) => value.updateButton(this.language, this.isUppercase));\n  }\n\n  getButtonValue(code) {\n    if (this.buttonsList.has(code)) {\n      const button = this.buttonsList.get(code);\n      button.setActiveState();\n      return button.isSymbol ? button.nodeValue : null;\n    }\n    return null;\n  }\n\n  getButton(code) {\n    return this.buttonsList.get(code) || null;\n  }\n\n  addMouseShortcut(name, code) {\n    if (this.shortcut.has(name)) {\n      const temp = this.shortcut.get(name);\n      temp.setInActiveState();\n      this.shortcut.delete(name);\n      return;\n    }\n    const button = this.getButton(code);\n    this.shortcut.set(name, button);\n    button.setActiveState();\n    if (this.shortcut.has('alt') && this.shortcut.has('ctrl')) {\n      this.changeLanguage();\n      this.clearShortcut();\n    }\n  }\n\n  addKeyboardShortcut(name, code) {\n    if (this.shortcut.has(name)) {\n      return;\n    }\n    const button = this.getButton(code);\n    this.shortcut.set(name, button);\n    button.setActiveState();\n    if (this.shortcut.has('alt') && this.shortcut.has('ctrl')) {\n      this.changeLanguage();\n      this.clearShortcut();\n    }\n  }\n\n  clearShortcut() {\n    this.shortcut.forEach(el => el.setInActiveState());\n    this.shortcut.clear();\n  }\n}\n\n\n//# sourceURL=webpack://virtual-keyboard/./src/js/keyboard.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;